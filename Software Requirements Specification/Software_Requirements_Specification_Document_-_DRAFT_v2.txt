1. Introduction

1.1 Purpose

The purpose of this document is to give a detailed description of the requirements for the Intelligent Ideal Home Locator software.
This document will outline the product description, specific, functional and performance requirements as well as design constraints.

1.2 Scope

The Intelligent Ideal Home Locator is a location based desktop application whose purpose is to find the ideal home for buyers with
specific user requirements which are determined by their input criteria. The software also allows for real estate agents and brokers
to effectively make sales on houses with the use of the software by putting the buyer in direct contact with agents and brokers.

Based on the input received by the buyer, a list will be generated in which the buyer can select the one home the deem the most ideal
for their specific needs. This will then put the buyer in communication with the broker and/or agent of said property.

1.3 Definitions, acronyms, and abbreviations

-User: 			Anyone that uses the developed software.
-Buyer/Customer:	A user whose reasoning for using the software is to find an ideal house determined by their specific needs.
-Real Estate Broker:	A user who is put in contact with a buyer that may express an interest in a particular property, their purpose is
			to sell said property to the prospective buyer.
-Real Estate Agent:	Exactly the same definition as a real estate broker. The two terms can be used interchangeably.
-Administrator:		A user whose purpose is to manage and facilitate the development of user storage in databases and user needs.
-Developer:		The person responsible for the creation and improvement of the Intelligent Ideal Home Locator software.
(...)


1.4 References

2. Overall description

2.1 Product perspective

    -System Interfaces
    -User interfaces
    -Hardware interfaces
    -Software interfaces
    -Communication Interfaces
    -Memory Constraints

2.2 Product functions
2.3 User characteristics
2.4 Constraints
2.5 Assumptions and dependencies

3. Specific requirements

3.1 User interfaces
3.2 Hardware interfaces
3.3 Software interfaces
3.4 Communications interfaces

4 Functional requirements

4.1 User Classes 

    -The Buyer
    -Real Estate Agent/Broker
    -Administrator

5 Performance requirements

6 Design constraints

